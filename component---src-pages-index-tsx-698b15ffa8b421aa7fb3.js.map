{"version":3,"file":"component---src-pages-index-tsx-698b15ffa8b421aa7fb3.js","mappings":"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","sources":["webpack://gamedevjamie.github.io/./node_modules/classnames/index.js","webpack://gamedevjamie.github.io/./src/components/ui/display/Icon.tsx","webpack://gamedevjamie.github.io/./src/components/ui/input/switch/Switch.tsx","webpack://gamedevjamie.github.io/./src/components/ui/input/switch/index.ts","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gamedevjamie.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://gamedevjamie.github.io/./src/components/header/Navbar/Navbar.tsx","webpack://gamedevjamie.github.io/./src/components/header/Navbar/index.ts","webpack://gamedevjamie.github.io/./src/components/header/Header.tsx","webpack://gamedevjamie.github.io/./src/components/header/index.ts","webpack://gamedevjamie.github.io/./src/pages/index.tsx"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\n\r\nenum IconType {\r\n  Twitter = \"Twitter\",\r\n  Github = \"Github\",\r\n  LinkedIn = \"LinkedIn\",\r\n  ItchIo = \"ItchIo\",\r\n  Code = \"Code\",\r\n\r\n  HTML = \"HTML\",\r\n  React = \"React\",\r\n  Gatsby = \"Gatsby\",\r\n  Tailwind = \"Tailwind\",\r\n\r\n  Sun = \"Sun\",\r\n  Moon = \"Moon\",\r\n}\r\n\r\nconst svgXMLNS = \"http://www.w3.org/2000/svg\";\r\nconst defaultHeight = \"1.25em\";\r\n\r\ntype IconData = {\r\n  viewBox: string;\r\n  path: React.ReactNode;\r\n};\r\n\r\nfunction getIcon(icon: IconType, defaultColor: boolean): IconData {\r\n  switch (icon) {\r\n    case IconType.Twitter:\r\n      return {\r\n        viewBox: \"0 0 512 512\",\r\n        path: (\r\n          <path\r\n            fill={defaultColor ? \"#1DA1F2\" : \"currentcolor\"}\r\n            d=\"M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z\"\r\n          />\r\n        ),\r\n      };\r\n    case IconType.LinkedIn:\r\n      return {\r\n        viewBox: \"0 0 512 512\",\r\n        path: (\r\n          <path\r\n            fill={defaultColor ? \"#0E76A8\" : \"currentcolor\"}\r\n            d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"\r\n          />\r\n        ),\r\n      };\r\n    case IconType.Github:\r\n      return {\r\n        viewBox: \"0 0 512 512\",\r\n        path: (\r\n          <path\r\n            fill={defaultColor ? \"#6e5494\" : \"currentcolor\"}\r\n            d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\r\n          />\r\n        ),\r\n      };\r\n    case IconType.ItchIo:\r\n      return {\r\n        viewBox: \"0 0 512 512\",\r\n        path: (\r\n          <path\r\n            fill={defaultColor ? \"#ff2449\" : \"currentcolor\"}\r\n            d=\"M71.92 34.77C50.2 47.67 7.4 96.84 7 109.73v21.34c0 27.06 25.29 50.84 48.25 50.84 27.57 0 50.54-22.85 50.54-50 0 27.12 22.18 50 49.76 50s49-22.85 49-50c0 27.12 23.59 50 51.16 50h.5c27.57 0 51.16-22.85 51.16-50 0 27.12 21.47 50 49 50s49.76-22.85 49.76-50c0 27.12 23 50 50.54 50 23 0 48.25-23.78 48.25-50.84v-21.34c-.4-12.9-43.2-62.07-64.92-75C372.56 32.4 325.76 32 256 32S91.14 33.1 71.92 34.77zm132.32 134.39c-22 38.4-77.9 38.71-99.85.25-13.17 23.14-43.17 32.07-56 27.66-3.87 40.15-13.67 237.13 17.73 269.15 80 18.67 302.08 18.12 379.76 0 31.65-32.27 21.32-232 17.75-269.15-12.92 4.44-42.88-4.6-56-27.66-22 38.52-77.85 38.1-99.85-.24-7.1 12.49-23.05 28.94-51.76 28.94a57.54 57.54 0 0 1-51.75-28.94zm-41.58 53.77c16.47 0 31.09 0 49.22 19.78a436.91 436.91 0 0 1 88.18 0C318.22 223 332.85 223 349.31 223c52.33 0 65.22 77.53 83.87 144.45 17.26 62.15-5.52 63.67-33.95 63.73-42.15-1.57-65.49-32.18-65.49-62.79-39.25 6.43-101.93 8.79-155.55 0 0 30.61-23.34 61.22-65.49 62.79-28.42-.06-51.2-1.58-33.94-63.73 18.67-67 31.56-144.45 83.88-144.45zM256 270.79s-44.38 40.77-52.35 55.21l29-1.17v25.32c0 1.55 21.34.16 23.33.16 11.65.54 23.31 1 23.31-.16v-25.28l29 1.17c-8-14.48-52.35-55.24-52.35-55.24z\"\r\n          />\r\n        ),\r\n      };\r\n\r\n    case IconType.Code:\r\n      return {\r\n        viewBox: \"0 0 640 512\",\r\n        path: (\r\n          <path\r\n            fill={defaultColor ? \"#000\" : \"currentcolor\"}\r\n            d=\"M392.8 1.2c-17-4.9-34.7 5-39.6 22l-128 448c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l128-448c4.9-17-5-34.7-22-39.6zm80.6 120.1c-12.5 12.5-12.5 32.8 0 45.3L562.7 256l-89.4 89.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l112-112c12.5-12.5 12.5-32.8 0-45.3l-112-112c-12.5-12.5-32.8-12.5-45.3 0zm-306.7 0c-12.5-12.5-32.8-12.5-45.3 0l-112 112c-12.5 12.5-12.5 32.8 0 45.3l112 112c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256l89.4-89.4c12.5-12.5 12.5-32.8 0-45.3z\"\r\n          />\r\n        ),\r\n      };\r\n\r\n    case IconType.HTML:\r\n      return {\r\n        viewBox: \"0 0 128 128\",\r\n        path: (\r\n          <>\r\n            <path\r\n              fill={defaultColor ? \"#E44D26\" : \"currentcolor\"}\r\n              d=\"M27.854 116.354l-8.043-90.211h88.378l-8.051 90.197-36.192 10.033z\"\r\n            ></path>\r\n            <path\r\n              fill={defaultColor ? \"#F16529\" : \"currentcolor\"}\r\n              d=\"M64 118.704l29.244-8.108 6.881-77.076H64z\"\r\n            ></path>\r\n            <path\r\n              fill={defaultColor ? \"#EBEBEB\" : \"currentcolor\"}\r\n              d=\"M64 66.978H49.359l-1.01-11.331H64V44.583H36.257l.264 2.969 2.72 30.489H64zm0 28.733l-.049.013-12.321-3.328-.788-8.823H39.735l1.55 17.372 22.664 6.292.051-.015z\"\r\n            ></path>\r\n            <path\r\n              fill={defaultColor ? \"\" : \"currentcolor\"}\r\n              d=\"M28.034 1.627h5.622v5.556H38.8V1.627h5.623v16.822H38.8v-5.633h-5.143v5.633h-5.623V1.627zm23.782 5.579h-4.95V1.627h15.525v5.579h-4.952v11.243h-5.623V7.206zm13.039-5.579h5.862l3.607 5.911 3.603-5.911h5.865v16.822h-5.601v-8.338l-3.867 5.981h-.098l-3.87-5.981v8.338h-5.502V1.627zm21.736 0h5.624v11.262h7.907v5.561H86.591V1.627z\"\r\n            ></path>\r\n            <path\r\n              fill={defaultColor ? \"#fff\" : \"currentcolor\"}\r\n              d=\"M63.962 66.978v11.063h13.624L76.302 92.39l-12.34 3.331v11.51l22.682-6.286.166-1.87 2.6-29.127.27-2.97h-2.982zm0-22.395v11.064h26.725l.221-2.487.505-5.608.265-2.969z\"\r\n            ></path>\r\n          </>\r\n        ),\r\n      };\r\n\r\n    case IconType.React:\r\n      return {\r\n        viewBox: \"0 0 128 128\",\r\n        path: (\r\n          <g fill={defaultColor ? \"#61DAFB\" : \"currentcolor\"}>\r\n            <circle cx=\"64\" cy=\"64\" r=\"11.4\"></circle>\r\n            <path d=\"M107.3 45.2c-2.2-.8-4.5-1.6-6.9-2.3.6-2.4 1.1-4.8 1.5-7.1 2.1-13.2-.2-22.5-6.6-26.1-1.9-1.1-4-1.6-6.4-1.6-7 0-15.9 5.2-24.9 13.9-9-8.7-17.9-13.9-24.9-13.9-2.4 0-4.5.5-6.4 1.6-6.4 3.7-8.7 13-6.6 26.1.4 2.3.9 4.7 1.5 7.1-2.4.7-4.7 1.4-6.9 2.3C8.2 50 1.4 56.6 1.4 64s6.9 14 19.3 18.8c2.2.8 4.5 1.6 6.9 2.3-.6 2.4-1.1 4.8-1.5 7.1-2.1 13.2.2 22.5 6.6 26.1 1.9 1.1 4 1.6 6.4 1.6 7.1 0 16-5.2 24.9-13.9 9 8.7 17.9 13.9 24.9 13.9 2.4 0 4.5-.5 6.4-1.6 6.4-3.7 8.7-13 6.6-26.1-.4-2.3-.9-4.7-1.5-7.1 2.4-.7 4.7-1.4 6.9-2.3 12.5-4.8 19.3-11.4 19.3-18.8s-6.8-14-19.3-18.8zM92.5 14.7c4.1 2.4 5.5 9.8 3.8 20.3-.3 2.1-.8 4.3-1.4 6.6-5.2-1.2-10.7-2-16.5-2.5-3.4-4.8-6.9-9.1-10.4-13 7.4-7.3 14.9-12.3 21-12.3 1.3 0 2.5.3 3.5.9zM81.3 74c-1.8 3.2-3.9 6.4-6.1 9.6-3.7.3-7.4.4-11.2.4-3.9 0-7.6-.1-11.2-.4-2.2-3.2-4.2-6.4-6-9.6-1.9-3.3-3.7-6.7-5.3-10 1.6-3.3 3.4-6.7 5.3-10 1.8-3.2 3.9-6.4 6.1-9.6 3.7-.3 7.4-.4 11.2-.4 3.9 0 7.6.1 11.2.4 2.2 3.2 4.2 6.4 6 9.6 1.9 3.3 3.7 6.7 5.3 10-1.7 3.3-3.4 6.6-5.3 10zm8.3-3.3c1.5 3.5 2.7 6.9 3.8 10.3-3.4.8-7 1.4-10.8 1.9 1.2-1.9 2.5-3.9 3.6-6 1.2-2.1 2.3-4.2 3.4-6.2zM64 97.8c-2.4-2.6-4.7-5.4-6.9-8.3 2.3.1 4.6.2 6.9.2 2.3 0 4.6-.1 6.9-.2-2.2 2.9-4.5 5.7-6.9 8.3zm-18.6-15c-3.8-.5-7.4-1.1-10.8-1.9 1.1-3.3 2.3-6.8 3.8-10.3 1.1 2 2.2 4.1 3.4 6.1 1.2 2.2 2.4 4.1 3.6 6.1zm-7-25.5c-1.5-3.5-2.7-6.9-3.8-10.3 3.4-.8 7-1.4 10.8-1.9-1.2 1.9-2.5 3.9-3.6 6-1.2 2.1-2.3 4.2-3.4 6.2zM64 30.2c2.4 2.6 4.7 5.4 6.9 8.3-2.3-.1-4.6-.2-6.9-.2-2.3 0-4.6.1-6.9.2 2.2-2.9 4.5-5.7 6.9-8.3zm22.2 21l-3.6-6c3.8.5 7.4 1.1 10.8 1.9-1.1 3.3-2.3 6.8-3.8 10.3-1.1-2.1-2.2-4.2-3.4-6.2zM31.7 35c-1.7-10.5-.3-17.9 3.8-20.3 1-.6 2.2-.9 3.5-.9 6 0 13.5 4.9 21 12.3-3.5 3.8-7 8.2-10.4 13-5.8.5-11.3 1.4-16.5 2.5-.6-2.3-1-4.5-1.4-6.6zM7 64c0-4.7 5.7-9.7 15.7-13.4 2-.8 4.2-1.5 6.4-2.1 1.6 5 3.6 10.3 6 15.6-2.4 5.3-4.5 10.5-6 15.5C15.3 75.6 7 69.6 7 64zm28.5 49.3c-4.1-2.4-5.5-9.8-3.8-20.3.3-2.1.8-4.3 1.4-6.6 5.2 1.2 10.7 2 16.5 2.5 3.4 4.8 6.9 9.1 10.4 13-7.4 7.3-14.9 12.3-21 12.3-1.3 0-2.5-.3-3.5-.9zM96.3 93c1.7 10.5.3 17.9-3.8 20.3-1 .6-2.2.9-3.5.9-6 0-13.5-4.9-21-12.3 3.5-3.8 7-8.2 10.4-13 5.8-.5 11.3-1.4 16.5-2.5.6 2.3 1 4.5 1.4 6.6zm9-15.6c-2 .8-4.2 1.5-6.4 2.1-1.6-5-3.6-10.3-6-15.6 2.4-5.3 4.5-10.5 6-15.5 13.8 4 22.1 10 22.1 15.6 0 4.7-5.8 9.7-15.7 13.4z\"></path>\r\n          </g>\r\n        ),\r\n      };\r\n\r\n    case IconType.Gatsby:\r\n      return {\r\n        viewBox: \"0 0 128 128\",\r\n        path: (\r\n          <path\r\n            fill={defaultColor ? \"#64328B\" : \"currentColor\"}\r\n            d=\"M64 0C28.7 0 0 28.7 0 64s28.7 64 64 64 64-28.7 64-64S99.3 0 64 0zM13.2 64L64 114.8c-28.1 0-50.8-22.7-50.8-50.8zm62.2 49.5l-60.9-61C19.7 30 39.9 13.2 64 13.2c16.6 0 31.3 7.9 40.5 20.2L97 40.6c-7.3-10.4-19.3-17.1-33-17.1-17.6 0-32.5 11.2-38.1 26.8C33.1 57 75.4 98.8 78.1 102c12.7-4.7 22.3-15.5 25.4-28.9H81.9v-9.4l33 .2c-.1 24.3-16.9 44.5-39.5 49.6z\"\r\n          ></path>\r\n        ),\r\n      };\r\n\r\n    case IconType.Tailwind:\r\n      return {\r\n        viewBox: \"0 0 128 128\",\r\n        path: (\r\n          <path\r\n            fill={defaultColor ? \"#38b2ac\" : \"currentColor\"}\r\n            d=\"M64.004 25.602c-17.067 0-27.73 8.53-32 25.597 6.398-8.531 13.867-11.73 22.398-9.597 4.871 1.214 8.352 4.746 12.207 8.66C72.883 56.629 80.145 64 96.004 64c17.066 0 27.73-8.531 32-25.602-6.399 8.536-13.867 11.735-22.399 9.602-4.87-1.215-8.347-4.746-12.207-8.66-6.27-6.367-13.53-13.738-29.394-13.738zM32.004 64c-17.066 0-27.73 8.531-32 25.602C6.402 81.066 13.87 77.867 22.402 80c4.871 1.215 8.352 4.746 12.207 8.66 6.274 6.367 13.536 13.738 29.395 13.738 17.066 0 27.73-8.53 32-25.597-6.399 8.531-13.867 11.73-22.399 9.597-4.87-1.214-8.347-4.746-12.207-8.66C55.128 71.371 47.868 64 32.004 64zm0 0\"\r\n          ></path>\r\n        ),\r\n      };\r\n\r\n    case IconType.Sun:\r\n      return {\r\n        viewBox: \"0 0 512 512\",\r\n        path: (\r\n          <path\r\n            fill={defaultColor ? \"#38b2ac\" : \"currentColor\"}\r\n            d=\"M361.5 1.2c5 2.1 8.6 6.6 9.6 11.9L391 121l107.9 19.8c5.3 1 9.8 4.6 11.9 9.6s1.5 10.7-1.6 15.2L446.9 256l62.3 90.3c3.1 4.5 3.7 10.2 1.6 15.2s-6.6 8.6-11.9 9.6L391 391 371.1 498.9c-1 5.3-4.6 9.8-9.6 11.9s-10.7 1.5-15.2-1.6L256 446.9l-90.3 62.3c-4.5 3.1-10.2 3.7-15.2 1.6s-8.6-6.6-9.6-11.9L121 391 13.1 371.1c-5.3-1-9.8-4.6-11.9-9.6s-1.5-10.7 1.6-15.2L65.1 256 2.8 165.7c-3.1-4.5-3.7-10.2-1.6-15.2s6.6-8.6 11.9-9.6L121 121 140.9 13.1c1-5.3 4.6-9.8 9.6-11.9s10.7-1.5 15.2 1.6L256 65.1 346.3 2.8c4.5-3.1 10.2-3.7 15.2-1.6zM160 256a96 96 0 1 1 192 0 96 96 0 1 1 -192 0zm224 0a128 128 0 1 0 -256 0 128 128 0 1 0 256 0z\"\r\n          />\r\n        ),\r\n      };\r\n\r\n    case IconType.Moon:\r\n      return {\r\n        viewBox: \"0 0 384 512\",\r\n        path: (\r\n          <path\r\n            fill={defaultColor ? \"#38b2ac\" : \"currentColor\"}\r\n            d=\"M223.5 32C100 32 0 132.3 0 256S100 480 223.5 480c60.6 0 115.5-24.2 155.8-63.4c5-4.9 6.3-12.5 3.1-18.7s-10.1-9.7-17-8.5c-9.8 1.7-19.8 2.6-30.1 2.6c-96.9 0-175.5-78.8-175.5-176c0-65.8 36-123.1 89.3-153.3c6.1-3.5 9.2-10.5 7.7-17.3s-7.3-11.9-14.3-12.5c-6.3-.5-12.6-.8-19-.8z\"\r\n          />\r\n        ),\r\n      };\r\n  }\r\n}\r\n\r\n//Use fill=currentcolor to use inherited color\r\ntype Props = {\r\n  icon: IconType;\r\n  color?: color;\r\n  defaultColor?: boolean; //True = Use default color of Icon from path's fill attribute\r\n  htmlColor?: string;\r\n  fontSize?: fontSize;\r\n};\r\n\r\nconst colorStyles = {\r\n  inherit: \"text-inherit\",\r\n  primary: \"text-primary\",\r\n  twitter: \"text-twitter\",\r\n  linkedin: \"text-linkedin\",\r\n  github: \"text-github\",\r\n  itchio: \"text-itchio\",\r\n};\r\nconst sizeStyles = {\r\n  inherit: \"\",\r\n  sm: \"text-base\",\r\n  md: \"text-xl\",\r\n  lg: \"text-2xl\",\r\n};\r\n\r\nconst Icon = ({\r\n  icon,\r\n  color = \"inherit\",\r\n  defaultColor = false,\r\n  htmlColor,\r\n  fontSize = \"inherit\",\r\n}: Props) => {\r\n  const iconData = getIcon(icon, defaultColor);\r\n  const classes = classNames(colorStyles[color], sizeStyles[fontSize]);\r\n\r\n  return (\r\n    <svg\r\n      xmlns={svgXMLNS}\r\n      height={defaultHeight}\r\n      viewBox={iconData.viewBox}\r\n      className={classes}\r\n      style={{\r\n        color: htmlColor && htmlColor,\r\n        fontSize: fontSize == \"inherit\" ? \"inherit\" : \"\",\r\n      }}\r\n    >\r\n      {iconData.path}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Icon;\r\nexport { IconType };\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport classNames from 'classnames';\r\nimport Icon, { IconType } from 'components/ui/display/Icon';\r\n\r\ntype Props = {\r\n  onToggle?: (isOn: boolean) => void;\r\n  leftIcon: IconType;\r\n  rightIcon: IconType;\r\n};\r\n\r\nconst Switch = ({ onToggle, leftIcon, rightIcon }: Props) => {\r\n  const [isOn, setIsOn] = useState(false);\r\n  const toggleSwitch = () => {\r\n    onToggle && onToggle(!isOn);\r\n    setIsOn(!isOn);\r\n  };\r\n\r\n  const handleClasses = classNames(\r\n    'w-8 h-8 rounded-full transition duration-300 transform text-white bg-primary absolute',\r\n    {\r\n      'translate-x-0': !isOn,\r\n      'translate-x-full': isOn,\r\n    }\r\n  );\r\n\r\n  const leftIconClasses = classNames('transition-all ease-in', {\r\n    'text-contrast-primary': !isOn,\r\n  });\r\n  const rightIconClasses = classNames('transition-all ease-in', {\r\n    'text-contrast-primary': isOn,\r\n  });\r\n\r\n  return (\r\n    <button\r\n      className=\"w-16 h-8 rounded-full bg-stone-50 flex items-center transition duration-300 focus:outline-none shadow text-xs relative\"\r\n      onClick={toggleSwitch}\r\n    >\r\n      <div className={handleClasses}></div>\r\n      <div className=\"z-10 flex flex-row justify-around w-full\">\r\n        <span className={leftIconClasses}>\r\n          <Icon icon={leftIcon} />\r\n        </span>\r\n        <span className={rightIconClasses}>\r\n          <Icon icon={rightIcon} />\r\n        </span>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\n/*\r\nconst Switch = ({ onToggle, leftIcon, rightIcon }: Props) => {\r\n  const [isOn, setIsOn] = useState(false);\r\n  const toggleSwitch = () => {\r\n    onToggle && onToggle(!isOn);\r\n    setIsOn(!isOn);\r\n  };\r\n\r\n  const classes = classNames('absolute w-full h-full flex items-center', {\r\n    'justify-start': !isOn,\r\n    'justify-end': isOn,\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"w-16 h-8 bg-slate-500 text-white flex items-center justify-between rounded-full cursor-pointer relative text-xs\"\r\n      onClick={toggleSwitch}\r\n    >\r\n      <span className=\"z-10 ml-1\">\r\n        <Icon icon={leftIcon} />\r\n      </span>\r\n      <span className=\"z-10 mr-1\">\r\n        <Icon icon={rightIcon} />\r\n      </span>\r\n      <div className={classes}>\r\n        <motion.div\r\n          className=\"w-8 h-8 bg-primary-dark rounded-full\"\r\n          layout\r\n          transition={spring}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n*/\r\n\r\nconst spring = {\r\n  type: 'spring',\r\n  stiffness: 400,\r\n  damping: 30,\r\n};\r\n\r\nexport default Switch;\r\n","import Switch from './Switch';\r\n\r\nexport default Switch;\r\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.18\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.18\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.18 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React, { useState } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport classNames from \"classnames\";\r\n\r\ntype NavItemProps = {\r\n  name: string;\r\n  xPos: number;\r\n  active: boolean;\r\n  onClick: (name: string, x: number) => void;\r\n};\r\n\r\nconst NavItem = ({ name, xPos, active, onClick }: NavItemProps) => {\r\n  const classes = classNames(\r\n    \"w-20 h-10 rounded-full cursor-pointer transition-colors ease-in flex flex-row justify-center items-center\",\r\n    {\r\n      \"text-contrast-primary\": active,\r\n      \"text-default hover:bg-primary-light/50\": !active,\r\n    }\r\n  );\r\n\r\n  return (\r\n    <li\r\n      className={classes}\r\n      onClick={() => {\r\n        onClick(name, xPos);\r\n      }}\r\n    >\r\n      {name}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst NavSwitch = ({ xPos }: { xPos: number }) => {\r\n  return (\r\n    <motion.div\r\n      animate={{ x: xPos, bottom: \"50%\", translateY: \"50%\" }}\r\n      //initial={false} Uncomment if don't want to animate on load\r\n      className=\"absolute bg-primary w-20 h-10 rounded-full bottom-2/4 translate-y-1/2 -z-10\"\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nconst NavList = () => {\r\n  const [activeXPos, setActiveXPos] = useState(0);\r\n  const [activeNavItem, setActiveNavItem] = useState(\"Home\");\r\n\r\n  const gap = 16;\r\n  const width = 80;\r\n  const xOffset = 96;\r\n\r\n  const switchNavItem = (name: string, xPos: number) => {\r\n    setActiveXPos(xPos);\r\n    setActiveNavItem(name);\r\n  };\r\n\r\n  return (\r\n    <ul className=\"py-1 px-2 marker:list-none flex flex-row gap-4 relative z-10\">\r\n      <NavSwitch xPos={activeXPos} />\r\n      <NavItem\r\n        name=\"Home\"\r\n        xPos={0}\r\n        active={activeNavItem == \"Home\"}\r\n        onClick={switchNavItem}\r\n      />\r\n      <NavItem\r\n        name=\"Projects\"\r\n        xPos={xOffset}\r\n        onClick={switchNavItem}\r\n        active={activeNavItem == \"Projects\"}\r\n      />\r\n      <NavItem\r\n        name=\"CV\"\r\n        xPos={xOffset * 2}\r\n        onClick={switchNavItem}\r\n        active={activeNavItem == \"CV\"}\r\n      />\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"bg-stone-50 rounded-full text-base shadow-md font-normal absolute md:relative left-1/2 md:left-0 -translate-x-1/2 md:translate-x-0 top-14 md:top-0 \">\r\n      <NavList />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./Navbar\";\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport Icon, { IconType } from \"components/ui/display/Icon\";\r\nimport Switch from \"components/ui/input/switch\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst Brand = () => {\r\n  return (\r\n    <div className=\"flex justify-start items-center text-sm md:text-lg cursor-pointer ml-2 md:ml-0\">\r\n      <span className=\"mr-2\">\r\n        <Icon icon={IconType.Code} color=\"primary\" />\r\n      </span>\r\n      <h3 className=\"font-semibold\">Jamie Tumalty</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"mx-auto max-w-screen-lg pt-3 pb-3 grid grid-cols-2 md:grid-cols-header fixed w-full left-1/2 -translate-x-1/2 z-50\">\r\n      <Brand />\r\n      <Navbar />\r\n      <div className=\"flex justify-end items-center mr-2 md:mr-0\">\r\n        <Switch leftIcon={IconType.Sun} rightIcon={IconType.Moon} />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\n\r\nexport default Header;\r\n","import * as React from 'react';\r\nimport Header from 'components/header';\r\nimport Home from 'sections/home';\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n    </>\r\n  );\r\n};\r\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","IconType","colorStyles","inherit","primary","twitter","linkedin","github","itchio","sizeStyles","sm","md","lg","_ref","icon","color","defaultColor","htmlColor","fontSize","iconData","Twitter","viewBox","path","React","fill","d","LinkedIn","Github","ItchIo","Code","HTML","cx","cy","r","Gatsby","Tailwind","Sun","Moon","getIcon","xmlns","height","className","style","onToggle","leftIcon","rightIcon","isOn","setIsOn","useState","handleClasses","leftIconClasses","rightIconClasses","onClick","toggleSwitch","Icon","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","spring","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","NavItem","xPos","active","NavSwitch","_ref2","div","NavList","activeXPos","setActiveXPos","activeNavItem","setActiveNavItem","switchNavItem","xOffset","Navbar","Brand","Header","Switch"],"sourceRoot":""}